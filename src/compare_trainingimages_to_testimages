#!/usr/bin/Rscript
Args <- commandArgs()
#
if ( length(Args) < 7  ){
fnm<-Args[4]
fnm<-substring(fnm,8,nchar(as.character(fnm)))
print(paste("Usage - RScript training.csv testing.csv "))
print(paste(" .... " ))
q()
}
ARGIND<-6
training<-c(as.character(Args[ARGIND]))
ARGIND<-ARGIND+1
testing<-c(as.character(Args[ARGIND]))
ARGIND<-ARGIND+1

filereadable<-file.access(training,mode=4)
if ( filereadable == -1 ) {
  print(paste(" Cannot find the training set ",training," quitting. "))
  q()
} 
filereadable<-file.access(testing,mode=4)
if ( filereadable == -1 ) {
  print(paste(" Cannot find the testing set ",testing," quitting. "))
  q()
} 

# train<-t(scale(t(as.matrix(read.csv(training,h=T)))))
# test<-t(scale(t(as.matrix(read.csv(testing,h=T)))))
# train<-scale(as.matrix(read.csv(training,h=T)))
train<-(as.matrix(read.csv(training,h=T)))
test<-(as.matrix(read.csv(testing,h=T)))

nt<-as.numeric(dim(train)[1])
for ( y in c(1:dim(test)[1] ) ) 
{
  wpvals<-rep(NA,nt)
  kpvals<-rep(NA,nt)
#  globalp<-(ks.test(c(train),test[y,]))$p.value
  for ( x in c(1:nt) )
  {
    kpvals[x]<-(ks.test(train[x,],test[y,]))$p.value
    wpvals[x]<-(wilcox.test(train[x,],test[y,]))$p.value
  }
  kqvals<-p.adjust(kpvals)
  wqvals<-p.adjust(wpvals)
  print(paste("KS-Summary for subject: ",y,"---mean:",mean(kqvals),"min",min(kqvals),"max",max(kqvals))) # ," global ",globalp))
  print(paste("Wilcox-Summary for subject: ",y,"---mean:",mean(wqvals),"min",min(wqvals),"max",max(wqvals))) # ," global ",globalp))
}
# print(warnings())

q()
